version: '3'

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=Test123!
    ports:
      - 5432:5432
    networks:
      - postgres-network

  authentication-service:
    build:
      context: ./
      dockerfile: ./AuthenticationService/Dockerfile
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__salamdo_authentication=User ID=postgres;Password=Test123!;Host=postgres;Port=5432;Database=salamdo_authentication;Pooling=true;Connection Lifetime=0;
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - authentication-network
      - postgres-network
      - cache-network

  catalogue-service:
    build: 
      context: ./
      dockerfile: ./catalogue-service/Dockerfile
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__salamdo_catalogue=User ID=postgres;Password=Test123!;Host=postgres;Port=5432;Database=salamdo_catalogue;Pooling=true;Connection Lifetime=0;
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - catalogue-network
      - postgres-network
      - cache-network

  cart-service:
    build: 
      context: ./
      dockerfile: ./cart-service/Dockerfile
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__salamdo_cart=User ID=postgres;Password=Test123!;Host=postgres;Port=5432;Database=salamdo_cart;Pooling=true;Connection Lifetime=0;
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - cart-network
      - postgres-network
      - cache-network

  checkout-service:
    build: 
      context: ./
      dockerfile: ./checkout-service/Dockerfile
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__salamdo_checkout=User ID=postgres;Password=Test123!;Host=postgres;Port=5432;Database=salamdo_checkout;Pooling=true;Connection Lifetime=0;
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - checkout-network
      - postgres-network
      - cache-network


  client-service:
    build: ./client
    networks:
      - client-network

  reverse-proxy:
    build: ./reverse-proxy
    restart: always
    ports:
      - 8080:80
    depends_on:
      - client-service
      - catalogue-service
      - pgAdmin
      - cart-service
      - checkout-service
      - authentication-service
    networks:
      - client-network
      - catalogue-network
      - pgAdmin-network
      - authentication-network
      - cart-network
      - checkout-network

  pgAdmin: 
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@pg.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
    ports:
      - 2345:80
    networks:
      - pgAdmin-network
      - postgres-network
    
  redis-cache:
    image: redis
    environment:
      - REDIS_PASSWORD=Test123!
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb
    ports:
      - 6379:6379
    networks:
      - cache-network

networks:
  postgres-network:
  cache-network:
  authentication-network:
  catalogue-network:
  client-network:
  cart-network:
  checkout-network:
  pgAdmin-network: